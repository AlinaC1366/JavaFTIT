Index: src/homework/ExtraMile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/homework/ExtraMile.java b/src/homework/ExtraMile.java
new file mode 100644
--- /dev/null	(date 1665424992561)
+++ b/src/homework/ExtraMile.java	(date 1665424992561)
@@ -0,0 +1,67 @@
+package homework;
+
+import java.util.Arrays;
+
+public class ExtraMile {
+    public static void main(String[] args) {
+
+
+        System.out.println("Exercise 1 ");
+       int countTo100;
+
+        System.out.println("Count to 100 w For");
+        for(countTo100 = 0; countTo100 <= 99;countTo100++) {
+            System.out.print( countTo100+",");
+        }
+
+        System.out.print(100);
+
+
+        System.out.println("Count to 100 w While");
+        int countTo100W = 1, n = 100;
+
+        while(countTo100W <= n) {
+            System.out.println(countTo100W);
+            countTo100W++;
+        }
+
+        System.out.println("Count to 100 w DoWhile");
+
+        int i = 0;
+        int n2 =100;
+
+        do{
+            i= n2;
+            i++;
+        } while(i<n2);
+
+        System.out.println(i);
+
+        System.out.println("Exercise 2");
+        String printFunction[] = {"Cats", "Dogs", "Rabbits"};
+        System.out.println(Arrays.toString(printFunction));
+
+        System.out.println("Exercise 3");
+        String printS2Element[] ={"Cat", "Dog", "Butterfly", "Zebra"};
+      //  char index = printS2Element.toCharArray(0);
+      //  char index = printS2Element.to
+      //  System.out.println(index);
+        
+    }
+
+  /*       
+
+        for(){
+*/
+    
+  }
+
+
+}
+
+
+
+
+
+
+
Index: src/homework/Homework4Confidential.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/homework/Homework4Confidential.java b/src/homework/Homework4Confidential.java
new file mode 100644
--- /dev/null	(date 1665424992572)
+++ b/src/homework/Homework4Confidential.java	(date 1665424992572)
@@ -0,0 +1,58 @@
+package homework;
+
+public class Homework4Confidential {
+    public static void main(String[] args) {
+        String[] sensitiveWords = {"mere", "Ana"};
+        System.out.println(confidential("Ana are mere multe mere bune", sensitiveWords));
+        System.out.println(confidential("", sensitiveWords));
+        System.out.println(confidential(null, sensitiveWords));
+        System.out.println(confidential("Ana  are mere multe m bune", sensitiveWords));
+    }
+
+    public static int countChar(String text, char c) {
+        int result = 0;
+        for (int i = 0; i < text.length(); i++) {
+            if (text.charAt(i) == c) {
+                result++;
+            }
+        }
+        return result;
+    }
+
+    public static int countCharV2(String text, char c) {
+        String replaced = text.replaceAll(String.valueOf(c), "");
+        return text.length() - replaced.length();
+    }
+
+    public static String redact(String text) {
+        return text.replaceAll(".", "*");
+    }
+
+    public static boolean contains(String[] texts, String contained) {
+        for (String text : texts) {
+            if (text.equals(contained)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    public static String[] words(String text) {
+        return text.split(" +");
+        // some change
+        // another change
+    }
+
+    public static String confidential(String text, String[] sensitiveWords) {
+        if (text == null || text.length() == 0) {
+            return text;
+        }
+        String[] words = words(text);
+        for (int i = 0; i < words.length; i++) {
+            if (contains(sensitiveWords, words[i])) {
+                words[i] = redact(words[i]);
+            }
+        }
+        return String.join(" ", words);
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"642acd56-df04-4e2e-a3a8-b097a943c131\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2FM59S1Hej73aFPtbtfWgDz8vtU\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"642acd56-df04-4e2e-a3a8-b097a943c131\" name=\"Changes\" comment=\"\" />\r\n      <created>1664288963039</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1664288963039</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e25066098e3ccdd49be381fa66542bbe802f5169)
+++ b/.idea/workspace.xml	(date 1665424993190)
@@ -1,24 +1,77 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="642acd56-df04-4e2e-a3a8-b097a943c131" name="Changes" comment="" />
+    <list default="true" id="642acd56-df04-4e2e-a3a8-b097a943c131" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/homework/Homework4Strings.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="curs5" />
+      </map>
+    </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
   <component name="ProjectId" id="2FM59S1Hej73aFPtbtfWgDz8vtU" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
+  <component name="RunManager" selected="Application.Homework4Strings">
+    <configuration name="Homework4Strings" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="homework.Homework4Strings" />
+      <module name="untitled" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="homework.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="StringExercise" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="course.StringExercise" />
+      <module name="untitled" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="course.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.Homework4Strings" />
+        <item itemvalue="Application.StringExercise" />
+        <item itemvalue="Application.StringExercise" />
+      </list>
+    </recent_temporary>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
